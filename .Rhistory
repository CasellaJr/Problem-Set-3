rm(list=ls())
## swiss data
s <- swiss
s
attach(s)  # valutare se fare l'attach di questo o dello standardizzato
#PRELIMINARY ANALYSIS
dim(s)
summary(s)
head(s)
pairs(df, gap=0, pch=16) #graphical representation
df <- scale(s[1:6])
df <-df[, 2:6] #take only the 5 indicators
head(df)
df <-df[, 2:6] #take only the 5 indicators
## swiss data
s <- swiss
s
attach(s)  # valutare se fare l'attach di questo o dello standardizzato
#PRELIMINARY ANALYSIS
dim(s)
summary(s)
head(s)
'Weâ€™ll use the swiss data as data set.
We start by loading the dataset and standardizing the data to make variables comparable.'
df <- scale(s[1:6])
df <-df[, 2:6] #take only the 5 indicators
head(df)
pairs(df, gap=0, pch=16) #graphical representation
random_df <- apply(df, 2,
function(x){runif(length(x), min(x), (max(x)))})
random_df <- as.data.frame(random_df)
scaled.random_df = scale(random_df)
pairs(scaled.random_df, gap = 0, pch = 16)
library("factoextra")
# Plot the standardized df data
fviz_pca_ind(prcomp(df), title = "PCA - Swiss dataset",
palette = "jco",
geom = "point", ggtheme = theme_classic(),
legend = "bottom")
# Plot the standardized df data
fviz_pca_ind(prcomp(df), title = "PCA - Swiss dataset",
palette = "jco",
geom = "point", ggtheme = theme_classic(),
legend = "bottom")
# Plot the random df data
fviz_pca_ind(prcomp(random_df), title = "PCA - Random data",
geom = "point", ggtheme = theme_classic())
library(clustertend)
# Compute Hopkins statistic for the iris dataset
set.seed(123)
hopkins(df, n = nrow(df)-1)
# Compute Hopkins statistic for a random dataset
set.seed(123)
hopkins(random_df, n = nrow(random_df)-1)
## VAT algorithm
fviz_dist(dist(df), show_labels = FALSE)+
labs(title = "Swiss data")
fviz_dist(dist(random_df), show_labels = FALSE)+
labs(title = "Random data")
## VAT algorithm
fviz_dist(dist(df), show_labels = FALSE)+
labs(title = "Swiss data")
fviz_dist(dist(random_df), show_labels = FALSE)+
labs(title = "Random data")
res.dist = dist(df, method = "euclidean")
res.wardd <- hclust(d = res.dist, method = "ward.D")
fviz_dend(res.wardd, cex = 0.5, main = "Ward D linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd))
res.dist = dist(df, method = "euclidean")
res.wardd <- hclust(d = res.dist, method = "ward.D")
fviz_dend(res.wardd, cex = 0.5, main = "Ward D linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd))
res.dist = dist(df, method = "euclidean")
res.wardd2 <- hclust(d = res.dist, method = "ward.D2")
fviz_dend(res.wardd2, cex = 0.5, main = "Ward D2 linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd2))
res.dist = dist(df, method = "euclidean")
res.wardd <- hclust(d = res.dist, method = "ward.D")
fviz_dend(res.wardd, cex = 0.5, main = "Ward D linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd))
res.dist = dist(df, method = "euclidean")
res.wardd2 <- hclust(d = res.dist, method = "ward.D2")
fviz_dend(res.wardd2, cex = 0.5, main = "Ward D2 linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd2))
library(cluster)
fviz_dend(hclust(daisy(s[, 2:6]), method="ward.D"),cex=0.5, main="Ward linkage method and Gower distance")
cor(cophenetic(hclust(daisy(s[, 2:6]),method="ward.D")), daisy(s))
res.dist = dist(df, method = "euclidean")
res.wardd <- hclust(d = res.dist, method = "ward.D")
fviz_dend(res.wardd, cex = 0.5, main = "Ward D linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd))
res.dist = dist(df, method = "euclidean")
res.wardd2 <- hclust(d = res.dist, method = "ward.D2")
fviz_dend(res.wardd2, cex = 0.5, main = "Ward D2 linkage method and euclidean distance")
cor(res.dist, cophenetic(res.wardd2))
library(cluster)
fviz_dend(hclust(daisy(s[, 2:6]), method="ward.D"),cex=0.5, main="Ward linkage method and Gower distance")
cor(cophenetic(hclust(daisy(s[, 2:6]),method="ward.D")), daisy(s))
fviz_dend(hclust(daisy(s[, 2:6]), method="ward.D2"),cex=0.5, main="Ward D2 linkage method and Gower distance")
cor(cophenetic(hclust(daisy(s[, 2:6]),method="ward.D2")), daisy(s))
res.dist = dist(df, method = "euclidean")
hc <- hclust(d=res.dist, method = "ward.D2")
plot(hc)
rect.hclust(hc, k=3, border="red")
hc_labels<-cutree(hc,k=3);
hc_labels
table(hc_labels)
